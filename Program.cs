using System;
using System.Threading;

namespace Console_Thread
{
    //При организации 
    //многозадачности на основе потоков у каждого процесса должен быть по крайней мере
    //один поток, хотя их может быть и больше.Это означает, что в одной программе
    //одновременно могут решаться две задачи и больше.Например, текст может
    //форматироваться в редакторе текста одновременно с его выводом на печать, при условии, что оба
    //эти действия выполняются в двух отдельных потоках.
    //Отличия в многозадачности на основе процессов и потоков могут быть сведены к
    //следующему: многозадачность на основе процессов организуется для параллельного
    //выполнения программ, а многозадачность на основе потоков — для параллельного
     //выполнения отдельных частей одной программы.

    internal class Program
    {
        static void Main(string[] args)
        {

            ThreadStart start = delegate 
            {
                Console.WriteLine("делегат ThreadStart");
                int x = 0;  
                int y = 20;  
                do
                {
                    x++;
                    Console.WriteLine("Поток делегата ThreadStart " +   x +" "+ y);
                    //Этот метод обусловливает приостановление того потока, из которого он был вызван, 
                    //на определенный период времени, указываемый в миллисекундах. Когда
                    //приостанавливается один поток, может выполняться другой. 
                    Thread.Sleep(2000); 

                } while (y > x);
                Console.WriteLine("Поток делегата ThreadStart завершен");
            
            };
            //Сделаем поток  для делегата
            Thread thread = new Thread(start);
            // Запуск
            thread.Start();

            int x = 0;  
            int y = 10; 
            do
            {
                x++;
                Console.WriteLine("Код в Main " + x +" "+y);
                Thread.Sleep(2000);
            } while (y > x);
            Console.WriteLine("Основной поток завершен(Main)");
            Console.WriteLine();

        }
    }
}
